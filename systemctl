#!/bin/bash
# systemctl emulator for openrc
##
#  Copyright (C) 2014 Aaditya Bagga (aaditya_gnulinux@zoho.com)
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  any later version.
#
#  This program is distributed WITHOUT ANY WARRANTY;
#  without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
#  See the GNU General Public License for more details.
##
# syntax for systemd's systemctl is
# systemctl <operation> <service>
# systemctl start haveged
#
# syntax for openrc's rc-service is
# rc-service <service> <operation>
# rc-service haveged start
#
# syntax for openrc's rc-update is
# rc-update <operation> <service>
# rc-update add haveged
#
# This emulator tries to emulate systemctl for rc-service
# and rc-update

check_root () {
	if [ "$EUID" != '0' ]; then
		echo "Root access required"
		exit 1
	fi
}

operation="$1" # operation is the first argument
service="$2"   # service is the second argument

if [ -z $operation ]; then
	echo "Operation (start/stop/restart/enable/disable/status) not specified"
	exit 1
fi

check_srv () {
	if [ -z $service ]; then
		echo "Service not specified"
		exit 1
	fi
}

case "$operation" in
'start'|'stop'|'restart')
	check_srv; check_root
	# Start/stop/restart service if available
	rc-service $service $operation || exit 1
	;;
'enable')
	check_srv; check_root
	# Add service to default runlevel
	rc-update add $service || exit 1
	;;
'disable')
	check_srv; check_root
	# Remove service from default runlevel
	rc-update del $service || exit 1
	;;
'status')
	check_srv
	# Show status of service
	rc-service $service status
	;;
'--failed'|'--crashed')
	# Show crashed service
	rc-status -c
	;;
'--all')
	# Show all service with their runlevels
	rc-update -v
	;;
'-h'|'--help'|*)
	echo "Syntax: systemctl <operation> <service>"
	echo "Example: systemctl start wicd"
	;;
esac

# Done
exit 0
